import random
class DistanteTextsRelevace:
    '''
    ## DistanteTextsRelevace
    Usado para desechar imagenes relevantes para muchos conceptos muy distantes
    ### Variables
    - `texts`: Lista de textos distantes conceptualmente
    - `umbral`: El umbral a partir del cual se considera de semejanza alta una similitud, para estos casos
    - `percentaje`: El Porciento a partir del cual se considera que una imagen es semejante a muchos casos
    - `max_compare`: Cantidad de casos maximos que se compararan para determinar relevancia
    ### Funciones
    - `get_texts()`: Devuelve los textos hasta el limite pasado en max_compare
    '''
    umbral = 0.2
    caption_umbral = 0.6
    percentaje = 0.45
    max_compare = 1000

    texts= [
        "A cat sleeping on a sofa", 
        "A rocket launching into space",
        "A girl playing in the park", 
        "A computer running a machine learning program",
        "A car driving on a road", 
        "A fish swimming in the ocean",
        "A black and white bedside table",
        "A bear eating in a park",
        "A lion hunting rabbits in the sky",
        "A lion roaring in the savannah",
        "Quantum physics theories applied to modern technology",
        "A child painting a landscape with vibrant colors",
        "Artificial intelligence algorithms optimizing complex processes",
        "A ship sailing through the stormy sea",
        "Genetic engineering techniques used in medical treatments",
        "A skyscraper reaching towards the sky" ,
        "Neurobiology studies exploring human consciousness",
        "A garden blooming with beautiful flowers" ,
        "Computer science principles guiding software development",
        "A forest teeming with life" ,
        "Philosophy debates influencing societal norms",
        "A painting of a bustling city at night",
        "A recipe for homemade pasta",
        "A poem about the beauty of nature",
        "A guide to understanding the stock market",
        "A discussion on the impact of climate change",
        "A short story about a young boy and his dog",
        "A step-by-step guide to knitting a scarf",
        "A comparison of different types of yoga",
        "An analysis of famous paintings from the Renaissance period",
        "A novel about a group of friends navigating their way through college",
        "A group of students studying in a library",
        "The process of photosynthesis in plants",
        "A chef preparing a gourmet dinner",
        "The theory of relativity by Einstein",
        "A dog running in a field",
        "The history of ancient civilizations",
        "A bird singing in a tree",
        "The principles of quantum mechanics",
        "A person meditating in a Zen garden",
        "The evolution of species over time",
        "A horse galloping across a plain",
        "The role of gravity in our daily lives",
        "A cloud drifting across the sky",
        "The impact of climate change on the environment",
        "A person practicing yoga",
        "The theory of evolution by Charles Darwin",
        "A baby taking its first steps",
        "The Big Bang theory in cosmology",
        "A teacher grading student papers",
        "The structure of the DNA molecule",
        "A sunset painting on a canvas",
        "A bird flying high above the clouds",
        "A chef preparing a gourmet meal",
        "A violinist performing a classical symphony",
        "A rainbow after a storm",
        "A diamond glittering under sunlight",
        "A snowflake landing on a frosty window",
        "A butterfly fluttering in a garden",
        "A mountain peak towering over a valley",
        "A river flowing peacefully through a countryside",
        "Experimental psychology theories analyzing human behavior",
        "A landscape painter capturing a serene scene",
        "A philosopher contemplating the nature of existence",
        "A chess player strategically placing pieces on the board",
        "A pianist playing a melancholic ballad",
        "A ballet dancer executing a graceful pirouette",
        "A portrait artist capturing a subject's likeness",
        "A sculptor shaping clay into a lifelike figure",
        "A gardener carefully nurturing a rose bush",
        "A poet penning verses about love and loss",
        "A dinosaur roaming the prehistoric jungles",
        "A spaceship traveling through the void of the universe",
        "A robot assembling a complex machine",
        "A sunset painting a canvas of orange and purple hues",
        "A comet streaking across the starry night sky",
        "A desert sand dune shifting in the wind",
        "A galaxy swirling with stars and nebulas",
        "A volcano erupting in a fiery display",
        "A whale diving deep into the ocean abyss",
        "A rainbow arching across the sky after a storm",
        "The theory of relativity being applied to space travel",
        "A waterfall cascading down a mountain",
        "A wildfire consuming a forest",
        "A penguin waddling on the ice",
        "A snowstorm blanketing a winter landscape",
        "A dog barking in a rainbow",
        "A spaceship landing on Mars",
        "A boy flying a kite in the desert",
        "A database system storing customer data",
        "A bicycle racing downhill",
        "A jellyfish floating in the coral reef",
        "A wooden bench in a sunlit garden",
        "A polar bear swimming in the Arctic Ocean",
        "A tiger stalking its prey in the jungle",
        "A painting showing a battle scene",
        "An experiment testing the effects of gravity",
        "A bird nesting in a tree",
        "A symphony performed by an orchestra",
        "A sculpture made of marble",
        "A novel set in the Victorian era",
        "A poem about the beauty of nature",
        "A play about love and betrayal",
        "A news report on a political scandal",
        "A recipe for homemade bread",
        "A guidebook to hiking in the mountains",
        "A dog",
        "A spaceship",
        "A boy",
        "A book",
        "A bicycle",
        "A cloud",
        "A blue",
        "A dog",
        "A wolf",
        "A wolf",
        "Classic literature theories",
        "A child writing",
        "Poetry algorithms",
        "A boat sailing",
        "Historical archaeological techniques",
        "A tower reaching",
        "towards the stars",
        "Archaeology studies",
        "A garden growing" ,
        "wildflowers",
        "Literature principles",
        "A forest thriving" ,
        "Religious debates",
        "A painting",
        "A quiet village at dawn",
        "A recipe",
        "A song",
        "Foreign exchange market",
        "Global warming",
        "An elderly woman and her grandson",
        "Knitting a blanket",
        "Types of meditation",
        "The Middle Ages",
        "A novel",
        "A group of scientists",
        "Cellular respiration",
        "A fine dining experience",
        "Newton",
        "A field of wheat",
        "Ancient mythologies",
        "A bird calling",
        "a forest",
        "Modern architecture",
        "A dog chasing its tail",
        "A field of corn",
        "The Industrial Revolution",
        "A painting",
        "A busy city at noon",
        "A recipe",
        "A poem",
        "Stock market fluctuations",
        "Climate change effects",
        "A young girl and her kitten",
        "Knitting a hat",
        "Types of cuisines",
        "The Renaissance era",
        "A novel",
        "A group of artists",
        "Photosynthesis process",
        "A luxury dinner",
        "Edison",
        "A dog barking",
        "A farm",
        "Ancient ruins",
        "A bird flying",
        "a windmill",
        "Classical mechanics",
        "Zen rock garden",
        ]
    
    def get_texts():
        #Cambiar umbral en caso de estar usandose mask segmentation
        if ImageEmbeddingEnv.KEY_IMAGES == 'mask':
            DistanteTextsRelevace.umbral *= 1.1
            
        #Cambiar umbral en caso de estar usandose captionmodel
        if ImageEmbeddingEnv.USE_CAPION_MODEL:
            DistanteTextsRelevace.umbral =  (DistanteTextsRelevace.umbral+DistanteTextsRelevace.caption_umbral)/2

        if len(DistanteTextsRelevace.texts)> DistanteTextsRelevace.max_compare:
            random.shuffle(DistanteTextsRelevace.texts)
        return DistanteTextsRelevace.texts[:DistanteTextsRelevace.max_compare]
    
from environment.environment import ImageEmbeddingEnv